// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: ethermint/bridge/v1/tx.proto

package types

import (
	context "context"
	fmt "fmt"
	grpc1 "github.com/gogo/protobuf/grpc"
	proto "github.com/gogo/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// MsgCreateDeposit defines a message to create a deposit record.
type MsgCreateDeposit struct {
	// creator of the message.
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	// tx_hash is the hash of the deposit transaction.
	TxHash string `protobuf:"bytes,2,opt,name=tx_hash,json=txHash,proto3" json:"tx_hash,omitempty"`
	// from of the deposit transaction.
	From string `protobuf:"bytes,3,opt,name=from,proto3" json:"from,omitempty"`
	// to of the deposit transaction.
	To string `protobuf:"bytes,4,opt,name=to,proto3" json:"to,omitempty"`
	// coin_type of the deposit transaction.
	CoinType CoinType `protobuf:"varint,5,opt,name=coin_type,json=coinType,proto3,enum=ethermint.bridge.v1.CoinType" json:"coin_type,omitempty"`
	// value of the deposit transaction.
	Value int64 `protobuf:"varint,6,opt,name=value,proto3" json:"value,omitempty"`
	// data of the deposit transaction.
	Data string `protobuf:"bytes,7,opt,name=data,proto3" json:"data,omitempty"`
}

func (m *MsgCreateDeposit) Reset()         { *m = MsgCreateDeposit{} }
func (m *MsgCreateDeposit) String() string { return proto.CompactTextString(m) }
func (*MsgCreateDeposit) ProtoMessage()    {}
func (*MsgCreateDeposit) Descriptor() ([]byte, []int) {
	return fileDescriptor_a07e32329dbc3b78, []int{0}
}
func (m *MsgCreateDeposit) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateDeposit) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateDeposit.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateDeposit) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateDeposit.Merge(m, src)
}
func (m *MsgCreateDeposit) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateDeposit) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateDeposit.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateDeposit proto.InternalMessageInfo

func (m *MsgCreateDeposit) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreateDeposit) GetTxHash() string {
	if m != nil {
		return m.TxHash
	}
	return ""
}

func (m *MsgCreateDeposit) GetFrom() string {
	if m != nil {
		return m.From
	}
	return ""
}

func (m *MsgCreateDeposit) GetTo() string {
	if m != nil {
		return m.To
	}
	return ""
}

func (m *MsgCreateDeposit) GetCoinType() CoinType {
	if m != nil {
		return m.CoinType
	}
	return CoinType_COIN_TYPE_UNSPECIFIED
}

func (m *MsgCreateDeposit) GetValue() int64 {
	if m != nil {
		return m.Value
	}
	return 0
}

func (m *MsgCreateDeposit) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

// MsgCreateDepositResponse defines the Msg/CreateDeposit response type.
type MsgCreateDepositResponse struct {
}

func (m *MsgCreateDepositResponse) Reset()         { *m = MsgCreateDepositResponse{} }
func (m *MsgCreateDepositResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateDepositResponse) ProtoMessage()    {}
func (*MsgCreateDepositResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a07e32329dbc3b78, []int{1}
}
func (m *MsgCreateDepositResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateDepositResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateDepositResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateDepositResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateDepositResponse.Merge(m, src)
}
func (m *MsgCreateDepositResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateDepositResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateDepositResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateDepositResponse proto.InternalMessageInfo

// MsgUpdateDeposit defines a message to update a deposit record.
type MsgUpdateDeposit struct {
	// creator of the message.
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	// tx_hash is the hash of the deposit transaction.
	TxHash string `protobuf:"bytes,2,opt,name=tx_hash,json=txHash,proto3" json:"tx_hash,omitempty"`
	// status of the deposit record.
	Status DepositStatus `protobuf:"varint,3,opt,name=status,proto3,enum=ethermint.bridge.v1.DepositStatus" json:"status,omitempty"`
	// rollup_tx_hash is the transaction hash of the b2 rollup tx.
	RollupTxHash string `protobuf:"bytes,4,opt,name=rollup_tx_hash,json=rollupTxHash,proto3" json:"rollup_tx_hash,omitempty"`
	// from_aa is the sender's AA address.
	FromAa string `protobuf:"bytes,5,opt,name=from_aa,json=fromAa,proto3" json:"from_aa,omitempty"`
}

func (m *MsgUpdateDeposit) Reset()         { *m = MsgUpdateDeposit{} }
func (m *MsgUpdateDeposit) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateDeposit) ProtoMessage()    {}
func (*MsgUpdateDeposit) Descriptor() ([]byte, []int) {
	return fileDescriptor_a07e32329dbc3b78, []int{2}
}
func (m *MsgUpdateDeposit) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateDeposit) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateDeposit.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateDeposit) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateDeposit.Merge(m, src)
}
func (m *MsgUpdateDeposit) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateDeposit) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateDeposit.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateDeposit proto.InternalMessageInfo

func (m *MsgUpdateDeposit) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgUpdateDeposit) GetTxHash() string {
	if m != nil {
		return m.TxHash
	}
	return ""
}

func (m *MsgUpdateDeposit) GetStatus() DepositStatus {
	if m != nil {
		return m.Status
	}
	return DepositStatus_DEPOSIT_STATUS_UNSPECIFIED
}

func (m *MsgUpdateDeposit) GetRollupTxHash() string {
	if m != nil {
		return m.RollupTxHash
	}
	return ""
}

func (m *MsgUpdateDeposit) GetFromAa() string {
	if m != nil {
		return m.FromAa
	}
	return ""
}

// MsgUpdateDepositResponse defines the Msg/UpdateDeposit response type.
type MsgUpdateDepositResponse struct {
}

func (m *MsgUpdateDepositResponse) Reset()         { *m = MsgUpdateDepositResponse{} }
func (m *MsgUpdateDepositResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateDepositResponse) ProtoMessage()    {}
func (*MsgUpdateDepositResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a07e32329dbc3b78, []int{3}
}
func (m *MsgUpdateDepositResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateDepositResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateDepositResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateDepositResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateDepositResponse.Merge(m, src)
}
func (m *MsgUpdateDepositResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateDepositResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateDepositResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateDepositResponse proto.InternalMessageInfo

// MsgDeleteDeposit defines a message to delete a deposit record.
type MsgDeleteDeposit struct {
	// creator of the message.
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	// tx_hash is the hash of the deposit transaction.
	TxHash string `protobuf:"bytes,2,opt,name=tx_hash,json=txHash,proto3" json:"tx_hash,omitempty"`
}

func (m *MsgDeleteDeposit) Reset()         { *m = MsgDeleteDeposit{} }
func (m *MsgDeleteDeposit) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteDeposit) ProtoMessage()    {}
func (*MsgDeleteDeposit) Descriptor() ([]byte, []int) {
	return fileDescriptor_a07e32329dbc3b78, []int{4}
}
func (m *MsgDeleteDeposit) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteDeposit) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteDeposit.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteDeposit) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteDeposit.Merge(m, src)
}
func (m *MsgDeleteDeposit) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteDeposit) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteDeposit.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteDeposit proto.InternalMessageInfo

func (m *MsgDeleteDeposit) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgDeleteDeposit) GetTxHash() string {
	if m != nil {
		return m.TxHash
	}
	return ""
}

// MsgDeleteDepositResponse defines the Msg/DeleteDeposit response type.
type MsgDeleteDepositResponse struct {
}

func (m *MsgDeleteDepositResponse) Reset()         { *m = MsgDeleteDepositResponse{} }
func (m *MsgDeleteDepositResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteDepositResponse) ProtoMessage()    {}
func (*MsgDeleteDepositResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a07e32329dbc3b78, []int{5}
}
func (m *MsgDeleteDepositResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteDepositResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteDepositResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteDepositResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteDepositResponse.Merge(m, src)
}
func (m *MsgDeleteDepositResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteDepositResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteDepositResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteDepositResponse proto.InternalMessageInfo

// MsgCreateWithdraw defines a message to create a withdraw record.
type MsgCreateWithdraw struct {
	// creator of the message.
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	// tx_id is the unique key of the withdraw record.
	TxId string `protobuf:"bytes,2,opt,name=tx_id,json=txId,proto3" json:"tx_id,omitempty"`
	// tx_hash_list is the hash list of the withdraw transaction in rollup.
	TxHashList []string `protobuf:"bytes,3,rep,name=tx_hash_list,json=txHashList,proto3" json:"tx_hash_list,omitempty"`
	// encoded_data is the message data to be signed.
	EncodedData string `protobuf:"bytes,4,opt,name=encoded_data,json=encodedData,proto3" json:"encoded_data,omitempty"`
}

func (m *MsgCreateWithdraw) Reset()         { *m = MsgCreateWithdraw{} }
func (m *MsgCreateWithdraw) String() string { return proto.CompactTextString(m) }
func (*MsgCreateWithdraw) ProtoMessage()    {}
func (*MsgCreateWithdraw) Descriptor() ([]byte, []int) {
	return fileDescriptor_a07e32329dbc3b78, []int{6}
}
func (m *MsgCreateWithdraw) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateWithdraw) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateWithdraw.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateWithdraw) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateWithdraw.Merge(m, src)
}
func (m *MsgCreateWithdraw) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateWithdraw) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateWithdraw.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateWithdraw proto.InternalMessageInfo

func (m *MsgCreateWithdraw) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreateWithdraw) GetTxId() string {
	if m != nil {
		return m.TxId
	}
	return ""
}

func (m *MsgCreateWithdraw) GetTxHashList() []string {
	if m != nil {
		return m.TxHashList
	}
	return nil
}

func (m *MsgCreateWithdraw) GetEncodedData() string {
	if m != nil {
		return m.EncodedData
	}
	return ""
}

// MsgCreateWithdrawResponse defines the Msg/CreateWithdraw response type.
type MsgCreateWithdrawResponse struct {
}

func (m *MsgCreateWithdrawResponse) Reset()         { *m = MsgCreateWithdrawResponse{} }
func (m *MsgCreateWithdrawResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateWithdrawResponse) ProtoMessage()    {}
func (*MsgCreateWithdrawResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a07e32329dbc3b78, []int{7}
}
func (m *MsgCreateWithdrawResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateWithdrawResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateWithdrawResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateWithdrawResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateWithdrawResponse.Merge(m, src)
}
func (m *MsgCreateWithdrawResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateWithdrawResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateWithdrawResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateWithdrawResponse proto.InternalMessageInfo

// MsgUpdateWithdraw defines a message to update a withdraw record.
type MsgUpdateWithdraw struct {
	// creator of the message.
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	// tx_id is the unique key of the withdraw record.
	TxId string `protobuf:"bytes,2,opt,name=tx_id,json=txId,proto3" json:"tx_id,omitempty"`
	// status of the withdraw record.
	Status WithdrawStatus `protobuf:"varint,3,opt,name=status,proto3,enum=ethermint.bridge.v1.WithdrawStatus" json:"status,omitempty"`
}

func (m *MsgUpdateWithdraw) Reset()         { *m = MsgUpdateWithdraw{} }
func (m *MsgUpdateWithdraw) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateWithdraw) ProtoMessage()    {}
func (*MsgUpdateWithdraw) Descriptor() ([]byte, []int) {
	return fileDescriptor_a07e32329dbc3b78, []int{8}
}
func (m *MsgUpdateWithdraw) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateWithdraw) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateWithdraw.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateWithdraw) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateWithdraw.Merge(m, src)
}
func (m *MsgUpdateWithdraw) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateWithdraw) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateWithdraw.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateWithdraw proto.InternalMessageInfo

func (m *MsgUpdateWithdraw) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgUpdateWithdraw) GetTxId() string {
	if m != nil {
		return m.TxId
	}
	return ""
}

func (m *MsgUpdateWithdraw) GetStatus() WithdrawStatus {
	if m != nil {
		return m.Status
	}
	return WithdrawStatus_WITHDRAW_STATUS_UNSPECIFIED
}

// MsgUpdateWithdrawResponse defines the Msg/UpdateWithdraw response type.
type MsgUpdateWithdrawResponse struct {
}

func (m *MsgUpdateWithdrawResponse) Reset()         { *m = MsgUpdateWithdrawResponse{} }
func (m *MsgUpdateWithdrawResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateWithdrawResponse) ProtoMessage()    {}
func (*MsgUpdateWithdrawResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a07e32329dbc3b78, []int{9}
}
func (m *MsgUpdateWithdrawResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateWithdrawResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateWithdrawResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateWithdrawResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateWithdrawResponse.Merge(m, src)
}
func (m *MsgUpdateWithdrawResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateWithdrawResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateWithdrawResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateWithdrawResponse proto.InternalMessageInfo

// MsgSignWithdraw defines a message to sign a withdraw record.
type MsgSignWithdraw struct {
	// creator of the message.
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	// tx_id is the unique key of the withdraw record.
	TxId string `protobuf:"bytes,2,opt,name=tx_id,json=txId,proto3" json:"tx_id,omitempty"`
	// signature of the withdraw record.
	Signature string `protobuf:"bytes,3,opt,name=signature,proto3" json:"signature,omitempty"`
}

func (m *MsgSignWithdraw) Reset()         { *m = MsgSignWithdraw{} }
func (m *MsgSignWithdraw) String() string { return proto.CompactTextString(m) }
func (*MsgSignWithdraw) ProtoMessage()    {}
func (*MsgSignWithdraw) Descriptor() ([]byte, []int) {
	return fileDescriptor_a07e32329dbc3b78, []int{10}
}
func (m *MsgSignWithdraw) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSignWithdraw) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSignWithdraw.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSignWithdraw) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSignWithdraw.Merge(m, src)
}
func (m *MsgSignWithdraw) XXX_Size() int {
	return m.Size()
}
func (m *MsgSignWithdraw) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSignWithdraw.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSignWithdraw proto.InternalMessageInfo

func (m *MsgSignWithdraw) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgSignWithdraw) GetTxId() string {
	if m != nil {
		return m.TxId
	}
	return ""
}

func (m *MsgSignWithdraw) GetSignature() string {
	if m != nil {
		return m.Signature
	}
	return ""
}

// MsgSignWithdrawResponse defines the Msg/SignWithdraw response type.
type MsgSignWithdrawResponse struct {
}

func (m *MsgSignWithdrawResponse) Reset()         { *m = MsgSignWithdrawResponse{} }
func (m *MsgSignWithdrawResponse) String() string { return proto.CompactTextString(m) }
func (*MsgSignWithdrawResponse) ProtoMessage()    {}
func (*MsgSignWithdrawResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a07e32329dbc3b78, []int{11}
}
func (m *MsgSignWithdrawResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSignWithdrawResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSignWithdrawResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSignWithdrawResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSignWithdrawResponse.Merge(m, src)
}
func (m *MsgSignWithdrawResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgSignWithdrawResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSignWithdrawResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSignWithdrawResponse proto.InternalMessageInfo

// MsgDeleteWithdraw defines a message to delete a withdraw record.
type MsgDeleteWithdraw struct {
	// creator of the message.
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	// tx_id is the unique key of the withdraw record.
	TxId string `protobuf:"bytes,2,opt,name=tx_id,json=txId,proto3" json:"tx_id,omitempty"`
}

func (m *MsgDeleteWithdraw) Reset()         { *m = MsgDeleteWithdraw{} }
func (m *MsgDeleteWithdraw) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteWithdraw) ProtoMessage()    {}
func (*MsgDeleteWithdraw) Descriptor() ([]byte, []int) {
	return fileDescriptor_a07e32329dbc3b78, []int{12}
}
func (m *MsgDeleteWithdraw) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteWithdraw) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteWithdraw.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteWithdraw) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteWithdraw.Merge(m, src)
}
func (m *MsgDeleteWithdraw) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteWithdraw) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteWithdraw.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteWithdraw proto.InternalMessageInfo

func (m *MsgDeleteWithdraw) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgDeleteWithdraw) GetTxId() string {
	if m != nil {
		return m.TxId
	}
	return ""
}

// MsgDeleteWithdrawResponse defines the Msg/DeleteWithdraw response type.
type MsgDeleteWithdrawResponse struct {
}

func (m *MsgDeleteWithdrawResponse) Reset()         { *m = MsgDeleteWithdrawResponse{} }
func (m *MsgDeleteWithdrawResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteWithdrawResponse) ProtoMessage()    {}
func (*MsgDeleteWithdrawResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a07e32329dbc3b78, []int{13}
}
func (m *MsgDeleteWithdrawResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteWithdrawResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteWithdrawResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteWithdrawResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteWithdrawResponse.Merge(m, src)
}
func (m *MsgDeleteWithdrawResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteWithdrawResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteWithdrawResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteWithdrawResponse proto.InternalMessageInfo

// MsgCreateCallerGroup defines a message to create a new caller group.
type MsgCreateCallerGroup struct {
	// creator of the message.
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	// name of the caller group.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// admin of the caller group.
	Admin string `protobuf:"bytes,3,opt,name=admin,proto3" json:"admin,omitempty"`
	// members of the caller group.
	Members []string `protobuf:"bytes,4,rep,name=members,proto3" json:"members,omitempty"`
}

func (m *MsgCreateCallerGroup) Reset()         { *m = MsgCreateCallerGroup{} }
func (m *MsgCreateCallerGroup) String() string { return proto.CompactTextString(m) }
func (*MsgCreateCallerGroup) ProtoMessage()    {}
func (*MsgCreateCallerGroup) Descriptor() ([]byte, []int) {
	return fileDescriptor_a07e32329dbc3b78, []int{14}
}
func (m *MsgCreateCallerGroup) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateCallerGroup) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateCallerGroup.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateCallerGroup) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateCallerGroup.Merge(m, src)
}
func (m *MsgCreateCallerGroup) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateCallerGroup) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateCallerGroup.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateCallerGroup proto.InternalMessageInfo

func (m *MsgCreateCallerGroup) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreateCallerGroup) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *MsgCreateCallerGroup) GetAdmin() string {
	if m != nil {
		return m.Admin
	}
	return ""
}

func (m *MsgCreateCallerGroup) GetMembers() []string {
	if m != nil {
		return m.Members
	}
	return nil
}

// MsgCreateCallerGroupResponse defines the Msg/CreateCallerGroup response type.
type MsgCreateCallerGroupResponse struct {
}

func (m *MsgCreateCallerGroupResponse) Reset()         { *m = MsgCreateCallerGroupResponse{} }
func (m *MsgCreateCallerGroupResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateCallerGroupResponse) ProtoMessage()    {}
func (*MsgCreateCallerGroupResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a07e32329dbc3b78, []int{15}
}
func (m *MsgCreateCallerGroupResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateCallerGroupResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateCallerGroupResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateCallerGroupResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateCallerGroupResponse.Merge(m, src)
}
func (m *MsgCreateCallerGroupResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateCallerGroupResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateCallerGroupResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateCallerGroupResponse proto.InternalMessageInfo

// MsgUpdateCallerGroup defines a message to update an existing caller group.
type MsgUpdateCallerGroup struct {
	// creator of the message.
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	// name of the caller group.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// admin of the caller group.
	Admin string `protobuf:"bytes,3,opt,name=admin,proto3" json:"admin,omitempty"`
	// members of the caller group.
	Members []string `protobuf:"bytes,4,rep,name=members,proto3" json:"members,omitempty"`
}

func (m *MsgUpdateCallerGroup) Reset()         { *m = MsgUpdateCallerGroup{} }
func (m *MsgUpdateCallerGroup) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateCallerGroup) ProtoMessage()    {}
func (*MsgUpdateCallerGroup) Descriptor() ([]byte, []int) {
	return fileDescriptor_a07e32329dbc3b78, []int{16}
}
func (m *MsgUpdateCallerGroup) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateCallerGroup) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateCallerGroup.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateCallerGroup) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateCallerGroup.Merge(m, src)
}
func (m *MsgUpdateCallerGroup) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateCallerGroup) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateCallerGroup.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateCallerGroup proto.InternalMessageInfo

func (m *MsgUpdateCallerGroup) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgUpdateCallerGroup) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *MsgUpdateCallerGroup) GetAdmin() string {
	if m != nil {
		return m.Admin
	}
	return ""
}

func (m *MsgUpdateCallerGroup) GetMembers() []string {
	if m != nil {
		return m.Members
	}
	return nil
}

// MsgUpdateCallerGroupResponse defines the Msg/UpdateCallerGroup response type.
type MsgUpdateCallerGroupResponse struct {
}

func (m *MsgUpdateCallerGroupResponse) Reset()         { *m = MsgUpdateCallerGroupResponse{} }
func (m *MsgUpdateCallerGroupResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateCallerGroupResponse) ProtoMessage()    {}
func (*MsgUpdateCallerGroupResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a07e32329dbc3b78, []int{17}
}
func (m *MsgUpdateCallerGroupResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateCallerGroupResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateCallerGroupResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateCallerGroupResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateCallerGroupResponse.Merge(m, src)
}
func (m *MsgUpdateCallerGroupResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateCallerGroupResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateCallerGroupResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateCallerGroupResponse proto.InternalMessageInfo

// MsgDeleteCallerGroup defines a message to delete an existing caller group.
type MsgDeleteCallerGroup struct {
	// creator of the message.
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	// name of the caller group.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (m *MsgDeleteCallerGroup) Reset()         { *m = MsgDeleteCallerGroup{} }
func (m *MsgDeleteCallerGroup) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteCallerGroup) ProtoMessage()    {}
func (*MsgDeleteCallerGroup) Descriptor() ([]byte, []int) {
	return fileDescriptor_a07e32329dbc3b78, []int{18}
}
func (m *MsgDeleteCallerGroup) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteCallerGroup) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteCallerGroup.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteCallerGroup) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteCallerGroup.Merge(m, src)
}
func (m *MsgDeleteCallerGroup) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteCallerGroup) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteCallerGroup.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteCallerGroup proto.InternalMessageInfo

func (m *MsgDeleteCallerGroup) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgDeleteCallerGroup) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// MsgDeleteCallerGroupResponse defines the Msg/DeleteCallerGroup response type.
type MsgDeleteCallerGroupResponse struct {
}

func (m *MsgDeleteCallerGroupResponse) Reset()         { *m = MsgDeleteCallerGroupResponse{} }
func (m *MsgDeleteCallerGroupResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteCallerGroupResponse) ProtoMessage()    {}
func (*MsgDeleteCallerGroupResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a07e32329dbc3b78, []int{19}
}
func (m *MsgDeleteCallerGroupResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteCallerGroupResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteCallerGroupResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteCallerGroupResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteCallerGroupResponse.Merge(m, src)
}
func (m *MsgDeleteCallerGroupResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteCallerGroupResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteCallerGroupResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteCallerGroupResponse proto.InternalMessageInfo

// MsgCreateSignerGroup defines a message to create a new signer group.
type MsgCreateSignerGroup struct {
	// creator of the message.
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	// name of the signer group.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// admin of the signer group.
	Admin string `protobuf:"bytes,3,opt,name=admin,proto3" json:"admin,omitempty"`
	// threshold of the signatures required.
	Threshold uint32 `protobuf:"varint,4,opt,name=threshold,proto3" json:"threshold,omitempty"`
	// members of the signer group.
	Members []string `protobuf:"bytes,5,rep,name=members,proto3" json:"members,omitempty"`
}

func (m *MsgCreateSignerGroup) Reset()         { *m = MsgCreateSignerGroup{} }
func (m *MsgCreateSignerGroup) String() string { return proto.CompactTextString(m) }
func (*MsgCreateSignerGroup) ProtoMessage()    {}
func (*MsgCreateSignerGroup) Descriptor() ([]byte, []int) {
	return fileDescriptor_a07e32329dbc3b78, []int{20}
}
func (m *MsgCreateSignerGroup) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateSignerGroup) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateSignerGroup.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateSignerGroup) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateSignerGroup.Merge(m, src)
}
func (m *MsgCreateSignerGroup) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateSignerGroup) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateSignerGroup.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateSignerGroup proto.InternalMessageInfo

func (m *MsgCreateSignerGroup) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreateSignerGroup) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *MsgCreateSignerGroup) GetAdmin() string {
	if m != nil {
		return m.Admin
	}
	return ""
}

func (m *MsgCreateSignerGroup) GetThreshold() uint32 {
	if m != nil {
		return m.Threshold
	}
	return 0
}

func (m *MsgCreateSignerGroup) GetMembers() []string {
	if m != nil {
		return m.Members
	}
	return nil
}

// MsgCreateSignerGroupResponse defines the Msg/CreateSignerGroup response type.
type MsgCreateSignerGroupResponse struct {
}

func (m *MsgCreateSignerGroupResponse) Reset()         { *m = MsgCreateSignerGroupResponse{} }
func (m *MsgCreateSignerGroupResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateSignerGroupResponse) ProtoMessage()    {}
func (*MsgCreateSignerGroupResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a07e32329dbc3b78, []int{21}
}
func (m *MsgCreateSignerGroupResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateSignerGroupResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateSignerGroupResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateSignerGroupResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateSignerGroupResponse.Merge(m, src)
}
func (m *MsgCreateSignerGroupResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateSignerGroupResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateSignerGroupResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateSignerGroupResponse proto.InternalMessageInfo

// MsgUpdateSignerGroup defines a message to update an existing signer group.
type MsgUpdateSignerGroup struct {
	// creator of the message.
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	// name of the signer group.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// admin of the signer group.
	Admin string `protobuf:"bytes,3,opt,name=admin,proto3" json:"admin,omitempty"`
	// threshold of the signatures required.
	Threshold uint32 `protobuf:"varint,4,opt,name=threshold,proto3" json:"threshold,omitempty"`
	// members of the signer group.
	Members []string `protobuf:"bytes,5,rep,name=members,proto3" json:"members,omitempty"`
}

func (m *MsgUpdateSignerGroup) Reset()         { *m = MsgUpdateSignerGroup{} }
func (m *MsgUpdateSignerGroup) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateSignerGroup) ProtoMessage()    {}
func (*MsgUpdateSignerGroup) Descriptor() ([]byte, []int) {
	return fileDescriptor_a07e32329dbc3b78, []int{22}
}
func (m *MsgUpdateSignerGroup) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateSignerGroup) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateSignerGroup.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateSignerGroup) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateSignerGroup.Merge(m, src)
}
func (m *MsgUpdateSignerGroup) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateSignerGroup) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateSignerGroup.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateSignerGroup proto.InternalMessageInfo

func (m *MsgUpdateSignerGroup) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgUpdateSignerGroup) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *MsgUpdateSignerGroup) GetAdmin() string {
	if m != nil {
		return m.Admin
	}
	return ""
}

func (m *MsgUpdateSignerGroup) GetThreshold() uint32 {
	if m != nil {
		return m.Threshold
	}
	return 0
}

func (m *MsgUpdateSignerGroup) GetMembers() []string {
	if m != nil {
		return m.Members
	}
	return nil
}

// MsgUpdateSignerGroupResponse defines the Msg/UpdateSignerGroup response type.
type MsgUpdateSignerGroupResponse struct {
}

func (m *MsgUpdateSignerGroupResponse) Reset()         { *m = MsgUpdateSignerGroupResponse{} }
func (m *MsgUpdateSignerGroupResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateSignerGroupResponse) ProtoMessage()    {}
func (*MsgUpdateSignerGroupResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a07e32329dbc3b78, []int{23}
}
func (m *MsgUpdateSignerGroupResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateSignerGroupResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateSignerGroupResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateSignerGroupResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateSignerGroupResponse.Merge(m, src)
}
func (m *MsgUpdateSignerGroupResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateSignerGroupResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateSignerGroupResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateSignerGroupResponse proto.InternalMessageInfo

// MsgDeleteSignerGroup defines a message to delete an existing signer group.
type MsgDeleteSignerGroup struct {
	// creator of the message.
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	// name of the signer group.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (m *MsgDeleteSignerGroup) Reset()         { *m = MsgDeleteSignerGroup{} }
func (m *MsgDeleteSignerGroup) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteSignerGroup) ProtoMessage()    {}
func (*MsgDeleteSignerGroup) Descriptor() ([]byte, []int) {
	return fileDescriptor_a07e32329dbc3b78, []int{24}
}
func (m *MsgDeleteSignerGroup) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteSignerGroup) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteSignerGroup.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteSignerGroup) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteSignerGroup.Merge(m, src)
}
func (m *MsgDeleteSignerGroup) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteSignerGroup) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteSignerGroup.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteSignerGroup proto.InternalMessageInfo

func (m *MsgDeleteSignerGroup) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgDeleteSignerGroup) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// MsgDeleteSignerGroupResponse defines the Msg/DeleteSignerGroup response type.
type MsgDeleteSignerGroupResponse struct {
}

func (m *MsgDeleteSignerGroupResponse) Reset()         { *m = MsgDeleteSignerGroupResponse{} }
func (m *MsgDeleteSignerGroupResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteSignerGroupResponse) ProtoMessage()    {}
func (*MsgDeleteSignerGroupResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a07e32329dbc3b78, []int{25}
}
func (m *MsgDeleteSignerGroupResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteSignerGroupResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteSignerGroupResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteSignerGroupResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteSignerGroupResponse.Merge(m, src)
}
func (m *MsgDeleteSignerGroupResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteSignerGroupResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteSignerGroupResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteSignerGroupResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*MsgCreateDeposit)(nil), "ethermint.bridge.v1.MsgCreateDeposit")
	proto.RegisterType((*MsgCreateDepositResponse)(nil), "ethermint.bridge.v1.MsgCreateDepositResponse")
	proto.RegisterType((*MsgUpdateDeposit)(nil), "ethermint.bridge.v1.MsgUpdateDeposit")
	proto.RegisterType((*MsgUpdateDepositResponse)(nil), "ethermint.bridge.v1.MsgUpdateDepositResponse")
	proto.RegisterType((*MsgDeleteDeposit)(nil), "ethermint.bridge.v1.MsgDeleteDeposit")
	proto.RegisterType((*MsgDeleteDepositResponse)(nil), "ethermint.bridge.v1.MsgDeleteDepositResponse")
	proto.RegisterType((*MsgCreateWithdraw)(nil), "ethermint.bridge.v1.MsgCreateWithdraw")
	proto.RegisterType((*MsgCreateWithdrawResponse)(nil), "ethermint.bridge.v1.MsgCreateWithdrawResponse")
	proto.RegisterType((*MsgUpdateWithdraw)(nil), "ethermint.bridge.v1.MsgUpdateWithdraw")
	proto.RegisterType((*MsgUpdateWithdrawResponse)(nil), "ethermint.bridge.v1.MsgUpdateWithdrawResponse")
	proto.RegisterType((*MsgSignWithdraw)(nil), "ethermint.bridge.v1.MsgSignWithdraw")
	proto.RegisterType((*MsgSignWithdrawResponse)(nil), "ethermint.bridge.v1.MsgSignWithdrawResponse")
	proto.RegisterType((*MsgDeleteWithdraw)(nil), "ethermint.bridge.v1.MsgDeleteWithdraw")
	proto.RegisterType((*MsgDeleteWithdrawResponse)(nil), "ethermint.bridge.v1.MsgDeleteWithdrawResponse")
	proto.RegisterType((*MsgCreateCallerGroup)(nil), "ethermint.bridge.v1.MsgCreateCallerGroup")
	proto.RegisterType((*MsgCreateCallerGroupResponse)(nil), "ethermint.bridge.v1.MsgCreateCallerGroupResponse")
	proto.RegisterType((*MsgUpdateCallerGroup)(nil), "ethermint.bridge.v1.MsgUpdateCallerGroup")
	proto.RegisterType((*MsgUpdateCallerGroupResponse)(nil), "ethermint.bridge.v1.MsgUpdateCallerGroupResponse")
	proto.RegisterType((*MsgDeleteCallerGroup)(nil), "ethermint.bridge.v1.MsgDeleteCallerGroup")
	proto.RegisterType((*MsgDeleteCallerGroupResponse)(nil), "ethermint.bridge.v1.MsgDeleteCallerGroupResponse")
	proto.RegisterType((*MsgCreateSignerGroup)(nil), "ethermint.bridge.v1.MsgCreateSignerGroup")
	proto.RegisterType((*MsgCreateSignerGroupResponse)(nil), "ethermint.bridge.v1.MsgCreateSignerGroupResponse")
	proto.RegisterType((*MsgUpdateSignerGroup)(nil), "ethermint.bridge.v1.MsgUpdateSignerGroup")
	proto.RegisterType((*MsgUpdateSignerGroupResponse)(nil), "ethermint.bridge.v1.MsgUpdateSignerGroupResponse")
	proto.RegisterType((*MsgDeleteSignerGroup)(nil), "ethermint.bridge.v1.MsgDeleteSignerGroup")
	proto.RegisterType((*MsgDeleteSignerGroupResponse)(nil), "ethermint.bridge.v1.MsgDeleteSignerGroupResponse")
}

func init() { proto.RegisterFile("ethermint/bridge/v1/tx.proto", fileDescriptor_a07e32329dbc3b78) }

var fileDescriptor_a07e32329dbc3b78 = []byte{
	// 1002 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x98, 0xcf, 0x8f, 0xdb, 0x44,
	0x14, 0xc7, 0xd7, 0x9b, 0x6c, 0x96, 0x0c, 0xdb, 0xd0, 0xba, 0x95, 0xd6, 0x0d, 0x21, 0x4a, 0xdd,
	0xed, 0x2a, 0x5b, 0x4a, 0xc2, 0x2e, 0xb7, 0x72, 0xa2, 0xbb, 0x08, 0x90, 0xd8, 0x4b, 0x5a, 0x84,
	0xc4, 0x01, 0x6b, 0x36, 0x1e, 0x6c, 0x4b, 0xb6, 0xc7, 0xf2, 0x4c, 0xd2, 0xf4, 0x84, 0x84, 0x90,
	0xb8, 0x21, 0x54, 0x24, 0xfe, 0x01, 0xfe, 0x11, 0x8e, 0xdc, 0xa8, 0xc4, 0x85, 0x23, 0xda, 0xe5,
	0x0f, 0x41, 0x9e, 0x19, 0x4f, 0xfd, 0x73, 0x62, 0x52, 0x84, 0xb8, 0xd9, 0xe3, 0x37, 0xef, 0x7d,
	0xde, 0xfb, 0x8e, 0xf7, 0xeb, 0x0d, 0x18, 0x20, 0xea, 0xa2, 0x38, 0xf0, 0x42, 0x3a, 0xbd, 0x88,
	0x3d, 0xdb, 0x41, 0xd3, 0xe5, 0xf1, 0x94, 0xae, 0x26, 0x51, 0x8c, 0x29, 0xd6, 0x6f, 0xca, 0xa7,
	0x13, 0xfe, 0x74, 0xb2, 0x3c, 0xee, 0xdf, 0xa9, 0xda, 0x62, 0xa3, 0x08, 0x13, 0x8f, 0xf2, 0x7d,
	0x7d, 0xb3, 0x2a, 0xe4, 0xa9, 0x47, 0x5d, 0x3b, 0x86, 0x4f, 0x45, 0xcc, 0xc0, 0xc1, 0xd8, 0xf1,
	0xd1, 0x14, 0x46, 0xde, 0x14, 0x86, 0x21, 0xa6, 0x90, 0x7a, 0x38, 0x24, 0xfc, 0xa9, 0xf9, 0x9b,
	0x06, 0xae, 0x9f, 0x13, 0xe7, 0x34, 0x46, 0x90, 0xa2, 0x33, 0x9e, 0x5c, 0x37, 0xc0, 0xee, 0x3c,
	0x59, 0xc0, 0xb1, 0xa1, 0x8d, 0xb4, 0x71, 0x77, 0x96, 0xde, 0xea, 0xfb, 0x60, 0x97, 0xae, 0x2c,
	0x17, 0x12, 0xd7, 0xd8, 0x66, 0x4f, 0x3a, 0x74, 0xf5, 0x31, 0x24, 0xae, 0xae, 0x83, 0xf6, 0x57,
	0x31, 0x0e, 0x8c, 0x16, 0x5b, 0x65, 0xd7, 0x7a, 0x0f, 0x6c, 0x53, 0x6c, 0xb4, 0xd9, 0xca, 0x36,
	0xc5, 0xfa, 0x43, 0xd0, 0x9d, 0x63, 0x2f, 0xb4, 0xe8, 0xb3, 0x08, 0x19, 0x3b, 0x23, 0x6d, 0xdc,
	0x3b, 0x79, 0x6b, 0x52, 0xd1, 0xf9, 0xe4, 0x14, 0x7b, 0xe1, 0x93, 0x67, 0x11, 0x9a, 0xbd, 0x36,
	0x17, 0x57, 0xfa, 0x2d, 0xb0, 0xb3, 0x84, 0xfe, 0x02, 0x19, 0x9d, 0x91, 0x36, 0x6e, 0xcd, 0xf8,
	0x4d, 0x52, 0xd5, 0x86, 0x14, 0x1a, 0xbb, 0xbc, 0x6a, 0x72, 0x6d, 0xf6, 0x81, 0x51, 0x6c, 0x68,
	0x86, 0x48, 0x84, 0x43, 0x82, 0xcc, 0x5f, 0x78, 0xb7, 0x9f, 0x45, 0xf6, 0xab, 0x75, 0xfb, 0x10,
	0x74, 0x08, 0x85, 0x74, 0x41, 0x58, 0xbf, 0xbd, 0x13, 0xb3, 0xb2, 0x0d, 0x51, 0xe0, 0x31, 0x8b,
	0x9c, 0x89, 0x1d, 0xfa, 0x01, 0xe8, 0xc5, 0xd8, 0xf7, 0x17, 0x91, 0x95, 0xe6, 0xe6, 0x13, 0xda,
	0xe3, 0xab, 0x4f, 0x78, 0x85, 0x7d, 0xb0, 0x9b, 0xcc, 0xd0, 0x82, 0x90, 0x4d, 0xaa, 0x3b, 0xeb,
	0x24, 0xb7, 0x1f, 0xa4, 0xed, 0xe5, 0x3a, 0x90, 0xed, 0x7d, 0xc8, 0xba, 0x3b, 0x43, 0x3e, 0x7a,
	0x95, 0xee, 0x44, 0x89, 0x5c, 0x1a, 0x59, 0xe2, 0x3b, 0x0d, 0xdc, 0x90, 0xe3, 0xfd, 0x5c, 0x9c,
	0x34, 0x45, 0x91, 0x9b, 0x60, 0x87, 0xae, 0x2c, 0xcf, 0x16, 0x25, 0xda, 0x74, 0xf5, 0x89, 0xad,
	0x8f, 0xc0, 0x9e, 0xa8, 0x6c, 0xf9, 0x1e, 0xa1, 0x46, 0x6b, 0xd4, 0x1a, 0x77, 0x67, 0x80, 0x97,
	0xff, 0xd4, 0x23, 0x54, 0xbf, 0x03, 0xf6, 0x50, 0x38, 0xc7, 0x36, 0xb2, 0x2d, 0x26, 0x30, 0x1f,
	0xd1, 0xeb, 0x62, 0xed, 0x2c, 0xd1, 0xf9, 0x4d, 0x70, 0xbb, 0x04, 0x22, 0x31, 0xbf, 0x66, 0x94,
	0x7c, 0x4a, 0x9b, 0x52, 0xbe, 0x5f, 0x10, 0xf9, 0x6e, 0xa5, 0xc8, 0x69, 0xf6, 0xbc, 0xca, 0x82,
	0x2e, 0x0f, 0x20, 0xe9, 0xbe, 0x04, 0x6f, 0x9c, 0x13, 0xe7, 0xb1, 0xe7, 0x84, 0x9b, 0xb2, 0x0d,
	0x40, 0x97, 0x78, 0x4e, 0x08, 0xe9, 0x22, 0x46, 0xe2, 0x9d, 0x7b, 0xb9, 0x60, 0xde, 0x06, 0xfb,
	0x85, 0xfc, 0xb2, 0xf4, 0x23, 0x36, 0x18, 0xae, 0xed, 0x86, 0xc5, 0x45, 0x6f, 0xf9, 0x1c, 0xb2,
	0x00, 0x05, 0xb7, 0xa4, 0x2c, 0xa7, 0xd0, 0xf7, 0x51, 0xfc, 0x51, 0x8c, 0x17, 0x91, 0xa2, 0x86,
	0x0e, 0xda, 0x21, 0x0c, 0x50, 0x5a, 0x22, 0xb9, 0x4e, 0x5e, 0x77, 0x68, 0x07, 0x5e, 0x28, 0x7a,
	0xe3, 0x37, 0x49, 0x8e, 0x00, 0x05, 0x17, 0x28, 0x26, 0x46, 0x9b, 0x1d, 0x99, 0xf4, 0xd6, 0x1c,
	0x82, 0x41, 0x55, 0xd5, 0x02, 0x15, 0x97, 0xe3, 0xbf, 0xa6, 0x2a, 0x55, 0x95, 0x54, 0x67, 0x8c,
	0x8a, 0x0f, 0x72, 0x63, 0x2a, 0x51, 0xa5, 0x94, 0x45, 0x56, 0x79, 0xae, 0x65, 0x24, 0x49, 0x0e,
	0xc5, 0xbf, 0xd9, 0xfc, 0x00, 0x74, 0xa9, 0x1b, 0x23, 0xe2, 0x62, 0xdf, 0x66, 0x6f, 0xe9, 0xb5,
	0xd9, 0xcb, 0x85, 0xec, 0x68, 0x76, 0xea, 0x05, 0xcb, 0x30, 0x15, 0xa1, 0xf9, 0xec, 0xfe, 0x5f,
	0xd0, 0x25, 0xa6, 0x4a, 0x3d, 0x37, 0x66, 0xce, 0xe9, 0x59, 0x51, 0xe5, 0xe4, 0xdb, 0xeb, 0xa0,
	0x75, 0x4e, 0x1c, 0xfd, 0xb9, 0x06, 0xae, 0xe5, 0x7d, 0xfb, 0x5e, 0xe5, 0x5f, 0xa8, 0xa2, 0x1b,
	0xf6, 0xdf, 0x69, 0x14, 0x26, 0xbb, 0x7a, 0xfb, 0x9b, 0xdf, 0xff, 0xfa, 0x71, 0xfb, 0x9e, 0x79,
	0x77, 0x5a, 0xf5, 0xb5, 0xc1, 0x3a, 0x41, 0x96, 0xf8, 0x2e, 0x61, 0x50, 0x79, 0x7b, 0xad, 0x85,
	0xca, 0x85, 0xd5, 0x43, 0x55, 0x5b, 0x9d, 0x1a, 0x6a, 0xc1, 0xf6, 0xe4, 0xa0, 0xf2, 0xae, 0x58,
	0x0b, 0x95, 0x0b, 0xab, 0x87, 0xaa, 0x36, 0x47, 0x35, 0x94, 0xcd, 0xf6, 0x48, 0xa8, 0x9f, 0x34,
	0xd0, 0x2b, 0xd8, 0xe8, 0xa1, 0x5a, 0x98, 0x34, 0xae, 0x3f, 0x69, 0x16, 0x27, 0xb9, 0x1e, 0x30,
	0xae, 0x43, 0xf3, 0x40, 0xa5, 0x60, 0xfa, 0xd9, 0xc8, 0xc0, 0x0a, 0xce, 0x79, 0xa8, 0x16, 0x67,
	0x3d, 0x58, 0x8d, 0x11, 0xaa, 0xc1, 0x84, 0x8a, 0x12, 0xec, 0x7b, 0x0d, 0xec, 0xe5, 0x4c, 0xf3,
	0xa0, 0xae, 0x5c, 0x36, 0xaa, 0xff, 0xa0, 0x49, 0x94, 0x44, 0xba, 0xcf, 0x90, 0x0e, 0x4c, 0xb3,
	0x12, 0x29, 0xf1, 0xd8, 0xfc, 0xa4, 0x0a, 0x56, 0x7a, 0xa8, 0x3e, 0x31, 0xeb, 0x27, 0x55, 0x63,
	0xab, 0xea, 0x49, 0x89, 0xa3, 0x25, 0xc1, 0x7e, 0xd6, 0xc0, 0x8d, 0xb2, 0x05, 0x1f, 0xa9, 0x8f,
	0x4d, 0x26, 0xb4, 0x7f, 0xdc, 0x38, 0x54, 0x12, 0xbe, 0xcb, 0x08, 0xef, 0x9b, 0x63, 0xd5, 0x21,
	0x9b, 0xb3, 0x8d, 0x96, 0xc3, 0x78, 0x12, 0xca, 0xb2, 0x25, 0x1f, 0xa9, 0xcf, 0x50, 0x23, 0xca,
	0x7a, 0xcb, 0x55, 0x53, 0x8a, 0x13, 0x57, 0xa2, 0x2c, 0x5b, 0xf4, 0x91, 0x5a, 0xbf, 0x46, 0x94,
	0xf5, 0x96, 0xad, 0xa6, 0x14, 0x6a, 0x97, 0x28, 0xcb, 0x0e, 0xbf, 0x46, 0xf1, 0x4c, 0xe8, 0x3a,
	0xc5, 0xab, 0xec, 0xae, 0x91, 0xe2, 0x84, 0x6d, 0x2c, 0x29, 0xde, 0x88, 0xb2, 0x14, 0xba, 0x4e,
	0xf1, 0x7f, 0x4e, 0x29, 0x14, 0x2f, 0x51, 0x96, 0x4d, 0x7c, 0x8d, 0xe2, 0x8d, 0x28, 0x6b, 0x4d,
	0xbd, 0x99, 0xe2, 0x59, 0xca, 0x47, 0xa7, 0xbf, 0x5e, 0x0e, 0xb5, 0x17, 0x97, 0x43, 0xed, 0xcf,
	0xcb, 0xa1, 0xf6, 0xc3, 0xd5, 0x70, 0xeb, 0xc5, 0xd5, 0x70, 0xeb, 0x8f, 0xab, 0xe1, 0xd6, 0x17,
	0x47, 0x8e, 0x47, 0xdd, 0xc5, 0xc5, 0x64, 0x8e, 0x83, 0x29, 0x5a, 0x06, 0x98, 0x64, 0x72, 0xae,
	0xd2, 0xac, 0xc9, 0x3f, 0xe1, 0xe4, 0xa2, 0xc3, 0x7e, 0x05, 0x78, 0xef, 0xef, 0x00, 0x00, 0x00,
	0xff, 0xff, 0x2f, 0xf1, 0x2e, 0xfb, 0x9f, 0x10, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MsgClient is the client API for Msg service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MsgClient interface {
	// CreateDeposit defines a method to create a deposit record.
	CreateDeposit(ctx context.Context, in *MsgCreateDeposit, opts ...grpc.CallOption) (*MsgCreateDepositResponse, error)
	// UpdateDeposit defines a method to update a deposit record's status.
	UpdateDeposit(ctx context.Context, in *MsgUpdateDeposit, opts ...grpc.CallOption) (*MsgUpdateDepositResponse, error)
	// DeleteDeposit defines a method to delete a deposit record.
	DeleteDeposit(ctx context.Context, in *MsgDeleteDeposit, opts ...grpc.CallOption) (*MsgDeleteDepositResponse, error)
	// CreateWithdraw defines a method to create a withdraw record.
	CreateWithdraw(ctx context.Context, in *MsgCreateWithdraw, opts ...grpc.CallOption) (*MsgCreateWithdrawResponse, error)
	// UpdateWithdraw defines a method to update a withdraw record's status.
	UpdateWithdraw(ctx context.Context, in *MsgUpdateWithdraw, opts ...grpc.CallOption) (*MsgUpdateWithdrawResponse, error)
	// SignWithdraw defines a method to sign a withdraw record.
	SignWithdraw(ctx context.Context, in *MsgSignWithdraw, opts ...grpc.CallOption) (*MsgSignWithdrawResponse, error)
	// DeleteWithdraw defines a method to delete a withdraw record.
	DeleteWithdraw(ctx context.Context, in *MsgDeleteWithdraw, opts ...grpc.CallOption) (*MsgDeleteWithdrawResponse, error)
	// CreateCallerGroup defines a method to create a new caller group.
	CreateCallerGroup(ctx context.Context, in *MsgCreateCallerGroup, opts ...grpc.CallOption) (*MsgCreateCallerGroupResponse, error)
	// UpdateCallerGroup defines a method to update a caller group.
	UpdateCallerGroup(ctx context.Context, in *MsgUpdateCallerGroup, opts ...grpc.CallOption) (*MsgUpdateCallerGroupResponse, error)
	// DeleteCallerGroup defines a method to delete a caller group.
	DeleteCallerGroup(ctx context.Context, in *MsgDeleteCallerGroup, opts ...grpc.CallOption) (*MsgDeleteCallerGroupResponse, error)
	// CreateSignerGroup defines a method to create a new signer group.
	CreateSignerGroup(ctx context.Context, in *MsgCreateSignerGroup, opts ...grpc.CallOption) (*MsgCreateSignerGroupResponse, error)
	// UpdateSignerGroup defines a method to update a signer group.
	UpdateSignerGroup(ctx context.Context, in *MsgUpdateSignerGroup, opts ...grpc.CallOption) (*MsgUpdateSignerGroupResponse, error)
	// DeleteSignerGroup defines a method to delete a signer group.
	DeleteSignerGroup(ctx context.Context, in *MsgDeleteSignerGroup, opts ...grpc.CallOption) (*MsgDeleteSignerGroupResponse, error)
}

type msgClient struct {
	cc grpc1.ClientConn
}

func NewMsgClient(cc grpc1.ClientConn) MsgClient {
	return &msgClient{cc}
}

func (c *msgClient) CreateDeposit(ctx context.Context, in *MsgCreateDeposit, opts ...grpc.CallOption) (*MsgCreateDepositResponse, error) {
	out := new(MsgCreateDepositResponse)
	err := c.cc.Invoke(ctx, "/ethermint.bridge.v1.Msg/CreateDeposit", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateDeposit(ctx context.Context, in *MsgUpdateDeposit, opts ...grpc.CallOption) (*MsgUpdateDepositResponse, error) {
	out := new(MsgUpdateDepositResponse)
	err := c.cc.Invoke(ctx, "/ethermint.bridge.v1.Msg/UpdateDeposit", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DeleteDeposit(ctx context.Context, in *MsgDeleteDeposit, opts ...grpc.CallOption) (*MsgDeleteDepositResponse, error) {
	out := new(MsgDeleteDepositResponse)
	err := c.cc.Invoke(ctx, "/ethermint.bridge.v1.Msg/DeleteDeposit", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreateWithdraw(ctx context.Context, in *MsgCreateWithdraw, opts ...grpc.CallOption) (*MsgCreateWithdrawResponse, error) {
	out := new(MsgCreateWithdrawResponse)
	err := c.cc.Invoke(ctx, "/ethermint.bridge.v1.Msg/CreateWithdraw", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateWithdraw(ctx context.Context, in *MsgUpdateWithdraw, opts ...grpc.CallOption) (*MsgUpdateWithdrawResponse, error) {
	out := new(MsgUpdateWithdrawResponse)
	err := c.cc.Invoke(ctx, "/ethermint.bridge.v1.Msg/UpdateWithdraw", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) SignWithdraw(ctx context.Context, in *MsgSignWithdraw, opts ...grpc.CallOption) (*MsgSignWithdrawResponse, error) {
	out := new(MsgSignWithdrawResponse)
	err := c.cc.Invoke(ctx, "/ethermint.bridge.v1.Msg/SignWithdraw", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DeleteWithdraw(ctx context.Context, in *MsgDeleteWithdraw, opts ...grpc.CallOption) (*MsgDeleteWithdrawResponse, error) {
	out := new(MsgDeleteWithdrawResponse)
	err := c.cc.Invoke(ctx, "/ethermint.bridge.v1.Msg/DeleteWithdraw", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreateCallerGroup(ctx context.Context, in *MsgCreateCallerGroup, opts ...grpc.CallOption) (*MsgCreateCallerGroupResponse, error) {
	out := new(MsgCreateCallerGroupResponse)
	err := c.cc.Invoke(ctx, "/ethermint.bridge.v1.Msg/CreateCallerGroup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateCallerGroup(ctx context.Context, in *MsgUpdateCallerGroup, opts ...grpc.CallOption) (*MsgUpdateCallerGroupResponse, error) {
	out := new(MsgUpdateCallerGroupResponse)
	err := c.cc.Invoke(ctx, "/ethermint.bridge.v1.Msg/UpdateCallerGroup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DeleteCallerGroup(ctx context.Context, in *MsgDeleteCallerGroup, opts ...grpc.CallOption) (*MsgDeleteCallerGroupResponse, error) {
	out := new(MsgDeleteCallerGroupResponse)
	err := c.cc.Invoke(ctx, "/ethermint.bridge.v1.Msg/DeleteCallerGroup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreateSignerGroup(ctx context.Context, in *MsgCreateSignerGroup, opts ...grpc.CallOption) (*MsgCreateSignerGroupResponse, error) {
	out := new(MsgCreateSignerGroupResponse)
	err := c.cc.Invoke(ctx, "/ethermint.bridge.v1.Msg/CreateSignerGroup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateSignerGroup(ctx context.Context, in *MsgUpdateSignerGroup, opts ...grpc.CallOption) (*MsgUpdateSignerGroupResponse, error) {
	out := new(MsgUpdateSignerGroupResponse)
	err := c.cc.Invoke(ctx, "/ethermint.bridge.v1.Msg/UpdateSignerGroup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DeleteSignerGroup(ctx context.Context, in *MsgDeleteSignerGroup, opts ...grpc.CallOption) (*MsgDeleteSignerGroupResponse, error) {
	out := new(MsgDeleteSignerGroupResponse)
	err := c.cc.Invoke(ctx, "/ethermint.bridge.v1.Msg/DeleteSignerGroup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MsgServer is the server API for Msg service.
type MsgServer interface {
	// CreateDeposit defines a method to create a deposit record.
	CreateDeposit(context.Context, *MsgCreateDeposit) (*MsgCreateDepositResponse, error)
	// UpdateDeposit defines a method to update a deposit record's status.
	UpdateDeposit(context.Context, *MsgUpdateDeposit) (*MsgUpdateDepositResponse, error)
	// DeleteDeposit defines a method to delete a deposit record.
	DeleteDeposit(context.Context, *MsgDeleteDeposit) (*MsgDeleteDepositResponse, error)
	// CreateWithdraw defines a method to create a withdraw record.
	CreateWithdraw(context.Context, *MsgCreateWithdraw) (*MsgCreateWithdrawResponse, error)
	// UpdateWithdraw defines a method to update a withdraw record's status.
	UpdateWithdraw(context.Context, *MsgUpdateWithdraw) (*MsgUpdateWithdrawResponse, error)
	// SignWithdraw defines a method to sign a withdraw record.
	SignWithdraw(context.Context, *MsgSignWithdraw) (*MsgSignWithdrawResponse, error)
	// DeleteWithdraw defines a method to delete a withdraw record.
	DeleteWithdraw(context.Context, *MsgDeleteWithdraw) (*MsgDeleteWithdrawResponse, error)
	// CreateCallerGroup defines a method to create a new caller group.
	CreateCallerGroup(context.Context, *MsgCreateCallerGroup) (*MsgCreateCallerGroupResponse, error)
	// UpdateCallerGroup defines a method to update a caller group.
	UpdateCallerGroup(context.Context, *MsgUpdateCallerGroup) (*MsgUpdateCallerGroupResponse, error)
	// DeleteCallerGroup defines a method to delete a caller group.
	DeleteCallerGroup(context.Context, *MsgDeleteCallerGroup) (*MsgDeleteCallerGroupResponse, error)
	// CreateSignerGroup defines a method to create a new signer group.
	CreateSignerGroup(context.Context, *MsgCreateSignerGroup) (*MsgCreateSignerGroupResponse, error)
	// UpdateSignerGroup defines a method to update a signer group.
	UpdateSignerGroup(context.Context, *MsgUpdateSignerGroup) (*MsgUpdateSignerGroupResponse, error)
	// DeleteSignerGroup defines a method to delete a signer group.
	DeleteSignerGroup(context.Context, *MsgDeleteSignerGroup) (*MsgDeleteSignerGroupResponse, error)
}

// UnimplementedMsgServer can be embedded to have forward compatible implementations.
type UnimplementedMsgServer struct {
}

func (*UnimplementedMsgServer) CreateDeposit(ctx context.Context, req *MsgCreateDeposit) (*MsgCreateDepositResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateDeposit not implemented")
}
func (*UnimplementedMsgServer) UpdateDeposit(ctx context.Context, req *MsgUpdateDeposit) (*MsgUpdateDepositResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateDeposit not implemented")
}
func (*UnimplementedMsgServer) DeleteDeposit(ctx context.Context, req *MsgDeleteDeposit) (*MsgDeleteDepositResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteDeposit not implemented")
}
func (*UnimplementedMsgServer) CreateWithdraw(ctx context.Context, req *MsgCreateWithdraw) (*MsgCreateWithdrawResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateWithdraw not implemented")
}
func (*UnimplementedMsgServer) UpdateWithdraw(ctx context.Context, req *MsgUpdateWithdraw) (*MsgUpdateWithdrawResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateWithdraw not implemented")
}
func (*UnimplementedMsgServer) SignWithdraw(ctx context.Context, req *MsgSignWithdraw) (*MsgSignWithdrawResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SignWithdraw not implemented")
}
func (*UnimplementedMsgServer) DeleteWithdraw(ctx context.Context, req *MsgDeleteWithdraw) (*MsgDeleteWithdrawResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteWithdraw not implemented")
}
func (*UnimplementedMsgServer) CreateCallerGroup(ctx context.Context, req *MsgCreateCallerGroup) (*MsgCreateCallerGroupResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateCallerGroup not implemented")
}
func (*UnimplementedMsgServer) UpdateCallerGroup(ctx context.Context, req *MsgUpdateCallerGroup) (*MsgUpdateCallerGroupResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateCallerGroup not implemented")
}
func (*UnimplementedMsgServer) DeleteCallerGroup(ctx context.Context, req *MsgDeleteCallerGroup) (*MsgDeleteCallerGroupResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteCallerGroup not implemented")
}
func (*UnimplementedMsgServer) CreateSignerGroup(ctx context.Context, req *MsgCreateSignerGroup) (*MsgCreateSignerGroupResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateSignerGroup not implemented")
}
func (*UnimplementedMsgServer) UpdateSignerGroup(ctx context.Context, req *MsgUpdateSignerGroup) (*MsgUpdateSignerGroupResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateSignerGroup not implemented")
}
func (*UnimplementedMsgServer) DeleteSignerGroup(ctx context.Context, req *MsgDeleteSignerGroup) (*MsgDeleteSignerGroupResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteSignerGroup not implemented")
}

func RegisterMsgServer(s grpc1.Server, srv MsgServer) {
	s.RegisterService(&_Msg_serviceDesc, srv)
}

func _Msg_CreateDeposit_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateDeposit)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateDeposit(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ethermint.bridge.v1.Msg/CreateDeposit",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateDeposit(ctx, req.(*MsgCreateDeposit))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateDeposit_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateDeposit)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateDeposit(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ethermint.bridge.v1.Msg/UpdateDeposit",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateDeposit(ctx, req.(*MsgUpdateDeposit))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DeleteDeposit_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDeleteDeposit)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DeleteDeposit(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ethermint.bridge.v1.Msg/DeleteDeposit",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DeleteDeposit(ctx, req.(*MsgDeleteDeposit))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreateWithdraw_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateWithdraw)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateWithdraw(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ethermint.bridge.v1.Msg/CreateWithdraw",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateWithdraw(ctx, req.(*MsgCreateWithdraw))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateWithdraw_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateWithdraw)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateWithdraw(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ethermint.bridge.v1.Msg/UpdateWithdraw",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateWithdraw(ctx, req.(*MsgUpdateWithdraw))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_SignWithdraw_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgSignWithdraw)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).SignWithdraw(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ethermint.bridge.v1.Msg/SignWithdraw",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).SignWithdraw(ctx, req.(*MsgSignWithdraw))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DeleteWithdraw_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDeleteWithdraw)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DeleteWithdraw(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ethermint.bridge.v1.Msg/DeleteWithdraw",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DeleteWithdraw(ctx, req.(*MsgDeleteWithdraw))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreateCallerGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateCallerGroup)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateCallerGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ethermint.bridge.v1.Msg/CreateCallerGroup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateCallerGroup(ctx, req.(*MsgCreateCallerGroup))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateCallerGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateCallerGroup)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateCallerGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ethermint.bridge.v1.Msg/UpdateCallerGroup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateCallerGroup(ctx, req.(*MsgUpdateCallerGroup))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DeleteCallerGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDeleteCallerGroup)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DeleteCallerGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ethermint.bridge.v1.Msg/DeleteCallerGroup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DeleteCallerGroup(ctx, req.(*MsgDeleteCallerGroup))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreateSignerGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateSignerGroup)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateSignerGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ethermint.bridge.v1.Msg/CreateSignerGroup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateSignerGroup(ctx, req.(*MsgCreateSignerGroup))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateSignerGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateSignerGroup)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateSignerGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ethermint.bridge.v1.Msg/UpdateSignerGroup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateSignerGroup(ctx, req.(*MsgUpdateSignerGroup))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DeleteSignerGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDeleteSignerGroup)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DeleteSignerGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ethermint.bridge.v1.Msg/DeleteSignerGroup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DeleteSignerGroup(ctx, req.(*MsgDeleteSignerGroup))
	}
	return interceptor(ctx, in, info, handler)
}

var _Msg_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ethermint.bridge.v1.Msg",
	HandlerType: (*MsgServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateDeposit",
			Handler:    _Msg_CreateDeposit_Handler,
		},
		{
			MethodName: "UpdateDeposit",
			Handler:    _Msg_UpdateDeposit_Handler,
		},
		{
			MethodName: "DeleteDeposit",
			Handler:    _Msg_DeleteDeposit_Handler,
		},
		{
			MethodName: "CreateWithdraw",
			Handler:    _Msg_CreateWithdraw_Handler,
		},
		{
			MethodName: "UpdateWithdraw",
			Handler:    _Msg_UpdateWithdraw_Handler,
		},
		{
			MethodName: "SignWithdraw",
			Handler:    _Msg_SignWithdraw_Handler,
		},
		{
			MethodName: "DeleteWithdraw",
			Handler:    _Msg_DeleteWithdraw_Handler,
		},
		{
			MethodName: "CreateCallerGroup",
			Handler:    _Msg_CreateCallerGroup_Handler,
		},
		{
			MethodName: "UpdateCallerGroup",
			Handler:    _Msg_UpdateCallerGroup_Handler,
		},
		{
			MethodName: "DeleteCallerGroup",
			Handler:    _Msg_DeleteCallerGroup_Handler,
		},
		{
			MethodName: "CreateSignerGroup",
			Handler:    _Msg_CreateSignerGroup_Handler,
		},
		{
			MethodName: "UpdateSignerGroup",
			Handler:    _Msg_UpdateSignerGroup_Handler,
		},
		{
			MethodName: "DeleteSignerGroup",
			Handler:    _Msg_DeleteSignerGroup_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "ethermint/bridge/v1/tx.proto",
}

func (m *MsgCreateDeposit) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateDeposit) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateDeposit) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Data) > 0 {
		i -= len(m.Data)
		copy(dAtA[i:], m.Data)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Data)))
		i--
		dAtA[i] = 0x3a
	}
	if m.Value != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Value))
		i--
		dAtA[i] = 0x30
	}
	if m.CoinType != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.CoinType))
		i--
		dAtA[i] = 0x28
	}
	if len(m.To) > 0 {
		i -= len(m.To)
		copy(dAtA[i:], m.To)
		i = encodeVarintTx(dAtA, i, uint64(len(m.To)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.From) > 0 {
		i -= len(m.From)
		copy(dAtA[i:], m.From)
		i = encodeVarintTx(dAtA, i, uint64(len(m.From)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.TxHash) > 0 {
		i -= len(m.TxHash)
		copy(dAtA[i:], m.TxHash)
		i = encodeVarintTx(dAtA, i, uint64(len(m.TxHash)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateDepositResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateDepositResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateDepositResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgUpdateDeposit) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateDeposit) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateDeposit) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.FromAa) > 0 {
		i -= len(m.FromAa)
		copy(dAtA[i:], m.FromAa)
		i = encodeVarintTx(dAtA, i, uint64(len(m.FromAa)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.RollupTxHash) > 0 {
		i -= len(m.RollupTxHash)
		copy(dAtA[i:], m.RollupTxHash)
		i = encodeVarintTx(dAtA, i, uint64(len(m.RollupTxHash)))
		i--
		dAtA[i] = 0x22
	}
	if m.Status != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Status))
		i--
		dAtA[i] = 0x18
	}
	if len(m.TxHash) > 0 {
		i -= len(m.TxHash)
		copy(dAtA[i:], m.TxHash)
		i = encodeVarintTx(dAtA, i, uint64(len(m.TxHash)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateDepositResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateDepositResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateDepositResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDeleteDeposit) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteDeposit) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteDeposit) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.TxHash) > 0 {
		i -= len(m.TxHash)
		copy(dAtA[i:], m.TxHash)
		i = encodeVarintTx(dAtA, i, uint64(len(m.TxHash)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeleteDepositResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteDepositResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteDepositResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgCreateWithdraw) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateWithdraw) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateWithdraw) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.EncodedData) > 0 {
		i -= len(m.EncodedData)
		copy(dAtA[i:], m.EncodedData)
		i = encodeVarintTx(dAtA, i, uint64(len(m.EncodedData)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.TxHashList) > 0 {
		for iNdEx := len(m.TxHashList) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.TxHashList[iNdEx])
			copy(dAtA[i:], m.TxHashList[iNdEx])
			i = encodeVarintTx(dAtA, i, uint64(len(m.TxHashList[iNdEx])))
			i--
			dAtA[i] = 0x1a
		}
	}
	if len(m.TxId) > 0 {
		i -= len(m.TxId)
		copy(dAtA[i:], m.TxId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.TxId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateWithdrawResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateWithdrawResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateWithdrawResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgUpdateWithdraw) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateWithdraw) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateWithdraw) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Status != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Status))
		i--
		dAtA[i] = 0x18
	}
	if len(m.TxId) > 0 {
		i -= len(m.TxId)
		copy(dAtA[i:], m.TxId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.TxId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateWithdrawResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateWithdrawResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateWithdrawResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgSignWithdraw) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSignWithdraw) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSignWithdraw) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Signature) > 0 {
		i -= len(m.Signature)
		copy(dAtA[i:], m.Signature)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Signature)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.TxId) > 0 {
		i -= len(m.TxId)
		copy(dAtA[i:], m.TxId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.TxId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgSignWithdrawResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSignWithdrawResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSignWithdrawResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDeleteWithdraw) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteWithdraw) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteWithdraw) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.TxId) > 0 {
		i -= len(m.TxId)
		copy(dAtA[i:], m.TxId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.TxId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeleteWithdrawResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteWithdrawResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteWithdrawResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgCreateCallerGroup) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateCallerGroup) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateCallerGroup) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Members) > 0 {
		for iNdEx := len(m.Members) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.Members[iNdEx])
			copy(dAtA[i:], m.Members[iNdEx])
			i = encodeVarintTx(dAtA, i, uint64(len(m.Members[iNdEx])))
			i--
			dAtA[i] = 0x22
		}
	}
	if len(m.Admin) > 0 {
		i -= len(m.Admin)
		copy(dAtA[i:], m.Admin)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Admin)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateCallerGroupResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateCallerGroupResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateCallerGroupResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgUpdateCallerGroup) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateCallerGroup) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateCallerGroup) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Members) > 0 {
		for iNdEx := len(m.Members) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.Members[iNdEx])
			copy(dAtA[i:], m.Members[iNdEx])
			i = encodeVarintTx(dAtA, i, uint64(len(m.Members[iNdEx])))
			i--
			dAtA[i] = 0x22
		}
	}
	if len(m.Admin) > 0 {
		i -= len(m.Admin)
		copy(dAtA[i:], m.Admin)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Admin)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateCallerGroupResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateCallerGroupResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateCallerGroupResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDeleteCallerGroup) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteCallerGroup) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteCallerGroup) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeleteCallerGroupResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteCallerGroupResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteCallerGroupResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgCreateSignerGroup) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateSignerGroup) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateSignerGroup) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Members) > 0 {
		for iNdEx := len(m.Members) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.Members[iNdEx])
			copy(dAtA[i:], m.Members[iNdEx])
			i = encodeVarintTx(dAtA, i, uint64(len(m.Members[iNdEx])))
			i--
			dAtA[i] = 0x2a
		}
	}
	if m.Threshold != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Threshold))
		i--
		dAtA[i] = 0x20
	}
	if len(m.Admin) > 0 {
		i -= len(m.Admin)
		copy(dAtA[i:], m.Admin)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Admin)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateSignerGroupResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateSignerGroupResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateSignerGroupResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgUpdateSignerGroup) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateSignerGroup) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateSignerGroup) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Members) > 0 {
		for iNdEx := len(m.Members) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.Members[iNdEx])
			copy(dAtA[i:], m.Members[iNdEx])
			i = encodeVarintTx(dAtA, i, uint64(len(m.Members[iNdEx])))
			i--
			dAtA[i] = 0x2a
		}
	}
	if m.Threshold != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Threshold))
		i--
		dAtA[i] = 0x20
	}
	if len(m.Admin) > 0 {
		i -= len(m.Admin)
		copy(dAtA[i:], m.Admin)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Admin)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateSignerGroupResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateSignerGroupResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateSignerGroupResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDeleteSignerGroup) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteSignerGroup) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteSignerGroup) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeleteSignerGroupResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteSignerGroupResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteSignerGroupResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func encodeVarintTx(dAtA []byte, offset int, v uint64) int {
	offset -= sovTx(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MsgCreateDeposit) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.TxHash)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.From)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.To)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.CoinType != 0 {
		n += 1 + sovTx(uint64(m.CoinType))
	}
	if m.Value != 0 {
		n += 1 + sovTx(uint64(m.Value))
	}
	l = len(m.Data)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreateDepositResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgUpdateDeposit) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.TxHash)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Status != 0 {
		n += 1 + sovTx(uint64(m.Status))
	}
	l = len(m.RollupTxHash)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.FromAa)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgUpdateDepositResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDeleteDeposit) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.TxHash)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgDeleteDepositResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgCreateWithdraw) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.TxId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if len(m.TxHashList) > 0 {
		for _, s := range m.TxHashList {
			l = len(s)
			n += 1 + l + sovTx(uint64(l))
		}
	}
	l = len(m.EncodedData)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreateWithdrawResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgUpdateWithdraw) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.TxId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Status != 0 {
		n += 1 + sovTx(uint64(m.Status))
	}
	return n
}

func (m *MsgUpdateWithdrawResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgSignWithdraw) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.TxId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Signature)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgSignWithdrawResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDeleteWithdraw) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.TxId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgDeleteWithdrawResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgCreateCallerGroup) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Admin)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if len(m.Members) > 0 {
		for _, s := range m.Members {
			l = len(s)
			n += 1 + l + sovTx(uint64(l))
		}
	}
	return n
}

func (m *MsgCreateCallerGroupResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgUpdateCallerGroup) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Admin)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if len(m.Members) > 0 {
		for _, s := range m.Members {
			l = len(s)
			n += 1 + l + sovTx(uint64(l))
		}
	}
	return n
}

func (m *MsgUpdateCallerGroupResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDeleteCallerGroup) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgDeleteCallerGroupResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgCreateSignerGroup) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Admin)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Threshold != 0 {
		n += 1 + sovTx(uint64(m.Threshold))
	}
	if len(m.Members) > 0 {
		for _, s := range m.Members {
			l = len(s)
			n += 1 + l + sovTx(uint64(l))
		}
	}
	return n
}

func (m *MsgCreateSignerGroupResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgUpdateSignerGroup) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Admin)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Threshold != 0 {
		n += 1 + sovTx(uint64(m.Threshold))
	}
	if len(m.Members) > 0 {
		for _, s := range m.Members {
			l = len(s)
			n += 1 + l + sovTx(uint64(l))
		}
	}
	return n
}

func (m *MsgUpdateSignerGroupResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDeleteSignerGroup) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgDeleteSignerGroupResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func sovTx(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTx(x uint64) (n int) {
	return sovTx(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MsgCreateDeposit) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateDeposit: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateDeposit: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TxHash", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TxHash = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field From", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.From = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field To", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.To = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CoinType", wireType)
			}
			m.CoinType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CoinType |= CoinType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Value", wireType)
			}
			m.Value = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Value |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Data", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Data = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateDepositResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateDepositResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateDepositResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateDeposit) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateDeposit: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateDeposit: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TxHash", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TxHash = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			m.Status = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Status |= DepositStatus(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RollupTxHash", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RollupTxHash = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FromAa", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FromAa = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateDepositResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateDepositResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateDepositResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteDeposit) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteDeposit: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteDeposit: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TxHash", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TxHash = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteDepositResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteDepositResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteDepositResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateWithdraw) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateWithdraw: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateWithdraw: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TxId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TxId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TxHashList", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TxHashList = append(m.TxHashList, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field EncodedData", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.EncodedData = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateWithdrawResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateWithdrawResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateWithdrawResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateWithdraw) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateWithdraw: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateWithdraw: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TxId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TxId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			m.Status = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Status |= WithdrawStatus(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateWithdrawResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateWithdrawResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateWithdrawResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSignWithdraw) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSignWithdraw: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSignWithdraw: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TxId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TxId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Signature", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Signature = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSignWithdrawResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSignWithdrawResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSignWithdrawResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteWithdraw) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteWithdraw: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteWithdraw: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TxId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TxId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteWithdrawResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteWithdrawResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteWithdrawResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateCallerGroup) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateCallerGroup: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateCallerGroup: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Admin", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Admin = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Members", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Members = append(m.Members, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateCallerGroupResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateCallerGroupResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateCallerGroupResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateCallerGroup) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateCallerGroup: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateCallerGroup: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Admin", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Admin = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Members", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Members = append(m.Members, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateCallerGroupResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateCallerGroupResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateCallerGroupResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteCallerGroup) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteCallerGroup: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteCallerGroup: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteCallerGroupResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteCallerGroupResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteCallerGroupResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateSignerGroup) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateSignerGroup: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateSignerGroup: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Admin", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Admin = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Threshold", wireType)
			}
			m.Threshold = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Threshold |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Members", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Members = append(m.Members, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateSignerGroupResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateSignerGroupResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateSignerGroupResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateSignerGroup) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateSignerGroup: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateSignerGroup: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Admin", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Admin = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Threshold", wireType)
			}
			m.Threshold = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Threshold |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Members", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Members = append(m.Members, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateSignerGroupResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateSignerGroupResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateSignerGroupResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteSignerGroup) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteSignerGroup: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteSignerGroup: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteSignerGroupResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteSignerGroupResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteSignerGroupResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTx(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTx
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTx
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTx
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTx
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTx        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTx          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTx = fmt.Errorf("proto: unexpected end of group")
)
